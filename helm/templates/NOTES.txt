1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else }}
  {{- if and .Values.birdAPI.enabled (eq .Values.birdAPI.service.type "NodePort") }}
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "bird-services.fullname" . }}-bird-api)
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo http://$NODE_IP:$NODE_PORT
  {{- else if and .Values.birdImageService.enabled (eq .Values.birdImageService.service.type "NodePort") }}
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "bird-services.fullname" . }}-bird-image-service)
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo http://$NODE_IP:$NODE_PORT
  {{- else if and .Values.birdAPI.enabled (eq .Values.birdAPI.service.type "LoadBalancer") }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "bird-services.fullname" . }}-bird-api'
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "bird-services.fullname" . }}-bird-api --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
    echo http://$SERVICE_IP:{{ .Values.birdAPI.service.port }}
  {{- else if and .Values.birdImageService.enabled (eq .Values.birdImageService.service.type "LoadBalancer") }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "bird-services.fullname" . }}-bird-image-service'
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "bird-services.fullname" . }}-bird-image-service --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
    echo http://$SERVICE_IP:{{ .Values.birdImageService.service.port }}
  {{- else if and .Values.birdAPI.enabled (eq .Values.birdAPI.service.type "ClusterIP") }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "bird-services.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
    echo "Visit http://127.0.0.1:8080 to use your application"
    kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
  {{- else if and .Values.birdImageService.enabled (eq .Values.birdImageService.service.type "ClusterIP") }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "bird-services.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
    echo "Visit http://127.0.0.1:8080 to use your application"
    kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
  {{- end }}
{{- end }}

2. Access the services:
   - Bird API: http://{{`{{ .Values.ingress.hosts[0].host }}`}}/api
   - Bird Image Service: http://{{`{{ .Values.ingress.hosts[0].host }}`}}/image

3. To check the status of the deployments, run:
   kubectl get deployments --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }}"

4. To check the status of the pods, run:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }}"

5. To view the logs of a specific pod, run:
   kubectl logs -f <pod-name> --namespace {{ .Release.Namespace }}
